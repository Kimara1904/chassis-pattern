version: '3.4'

services:
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - '8080:80'
      - '44340:443'
    depends_on:
        - userservice

  userservice:
    image: ${DOCKER_REGISTRY-}userservice
    build:
      context: .
      dockerfile: UserService/Dockerfile

    ports:
      - '8081:80'

    depends_on:
      - userdb

    environment:
      - DB_HOST=userdb
      - DB_NAME=LibraryUserDB
      - DB_SA_PASSWORD=ChassisLibrary123!

  userdb:
    image: 'mcr.microsoft.com/mssql/server:2022-latest'

    container_name: userdb

    ports:
      - '1433:1433'
    
    environment:
      - SA_PASSWORD=ChassisLibrary123!
      - ACCEPT_EULA=Y

  bookservice:
    image: ${DOCKER_REGISTRY-}bookservice
    build:
      context: .
      dockerfile: BookService/Dockerfile
    ports:
      - '8082:80'

    depends_on:
      - bookdb

    environment:
      - DB_HOST=bookdb
      - DB_NAME=LibraryBookDB
      - DB_SA_PASSWORD=ChassisLibrary123!

  bookdb:
    image: 'mcr.microsoft.com/mssql/server:2022-latest'

    container_name: bookdb

    ports:
      - '1434:1433'
    
    environment:
      - SA_PASSWORD=ChassisLibrary123!
      - ACCEPT_EULA=Y

  reviewservice:
    image: ${DOCKER_REGISTRY-}reviewservice
    build:
      context: .
      dockerfile: ReviewService/Dockerfile

    ports:
      - '8083:80'

    depends_on:
      - reviewdb

    environment:
      - DB_HOST=reviewdb
      - DB_NAME=LibraryReviewDB
      - DB_SA_PASSWORD=ChassisLibrary123!

  reviewdb:
    image: 'mcr.microsoft.com/mssql/server:2022-latest'

    container_name: reviewdb

    ports:
      - '1435:1433'
    
    environment:
      - SA_PASSWORD=ChassisLibrary123!
      - ACCEPT_EULA=Y

networks:
  default:
    driver: bridge



